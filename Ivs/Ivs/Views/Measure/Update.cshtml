@model DTO.Measure.MeasureDTO

@{
    ViewBag.Title = "Update Measure";
}
<h2>Update Measure</h2>
<div class="row">
    @if (!string.IsNullOrEmpty((string)TempData["Error"]))
    {
        <div id="error" class="error">
            @TempData["Error"]
        </div>
    }
    @using (Html.BeginForm("UpdateMeasure", "Measure", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary()
        <div class="row">
            <div class="col-md-5">
                <div class="form-group">
                    @Html.DisplayNameFor(model => model.code)
                    @Html.TextBoxFor(m => m.code, new { @class = "form-control", @readonly = "true" })
                    <div class="editor-field">
                        @Html.ValidationMessageFor(m => m.code)
                    </div>
                </div>
                <div class="form-group">
                    @Html.DisplayNameFor(model => model.name)
                    @Html.TextBoxFor(m => m.name, new { @class = "form-control" })
                    <div class="editor-field">
                        @Html.ValidationMessageFor(m => m.name)
                    </div>
                </div>
                <div class="form-group">
                    @Html.DisplayNameFor(model => model.description)
                    @Html.TextAreaFor(m => m.description, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.HiddenFor(m => m.id)
                    <button type="submit" class="btn btn-default">Submit</button>
                    <button class="btn btn-default">Cancel</button>
                </div>
            </div>
        </div>
    }

</div>
