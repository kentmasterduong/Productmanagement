@model Ivs.Models.ResearchItemModel
@{
    ViewBag.Title = "Item";

    #region Phân trang
    int pageNum = 0;
    int countItem = 20;
    int min = 1;
    int max = min;
    string previous = "#";
    string next = "#";

    if ((Model.page_count % countItem) == 0)
    {
        pageNum = Model.page_count / countItem;
    }
    else
    {
        pageNum = Model.page_count / countItem + 1;
    }

    if (pageNum > 26)
    {
        min = Model.page - 12;
        max = Model.page + 13;

        if (min < 1)
        {
            max = Model.page + 13 - min;
            min = 1;

        }

        if (max > pageNum)
        {
            min = Model.page - 14 - (pageNum - max);
            max = pageNum;
        }
    }
    else
    {
        min = 1;
        max = pageNum;
    }

    if (Model.page == pageNum)
    {
        previous = Url.Action("Item", "Item", new { page = (Model.page - 1) });
    }
    else if (Model.page > 1)
    {
        previous = Url.Action("Item", "Item", new { page = (Model.page - 1) });
        next = Url.Action("Item", "Item", new { page = (Model.page + 1) });
    }
    else
    {
        next = Url.Action("Item", "Item", new { page = (Model.page + 1) });
    }
    #endregion

}

<h2>Item</h2>

@if (!string.IsNullOrEmpty((string)TempData["Success"]))
{
    <div id="success" class="success">
        @TempData["Success"]
    </div>
}

@if (!string.IsNullOrEmpty((string)TempData["Error"]))
{
    <div id="error" class="error">
        @TempData["Error"]
    </div>
}
@using (Html.BeginForm("Item", "Item", FormMethod.Get))
{
    <div class="row vertical-align">
        <div class="col-md-3">Item Code : @Html.TextBoxFor(m => m.Item.code, new { @class = "form-control" })</div>
        <div class="col-md-3">Item Name : @Html.TextBoxFor(m => m.Item.name, new { @class = "form-control" })</div>
        <div class="col-md-3">Category : @Html.DropDownListFor(m => m.Item.category_id, (SelectList)ViewBag.ListCategory, "", new { @class = "form-control" })</div>
        <div class="col-md-3 vcenter">
            <button type="submit" class="btn btn-default">Submit</button>
        </div>
    </div>
}
<div class="row align-right">
    <div class="btn-action">
        @Html.ActionLink("Add Item", "Add", "Item", new { }, new { @class = "btn btn-success btn-sm" })
    </div>
</div>

<div class="row top">

    <ul class="pagination">

        @if (Model.page > 1)
        {
            <li>
                <a href="@previous" title="Previous">&laquo;</a>
            </li>
        }

        @if (Model.page < pageNum - 1)
        {
            <li>
                <a href="@next" title="Next">&raquo;</a>
            </li>
        }
    </ul>

</div>
<div class="table-responsive" id="divLis">
    <table class="table table-bordered table-hover tableData">
        <tr class="headerTable header">
            <th>
                No.
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Item.code)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Item.name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Item.category_id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Item.dangerous)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Item.discontinued_datetime)
            </th>
            <th></th>
        </tr>
        <tbody class="member">
            @if (Model != null)
            {
                int n = (Model.page - 1) * 20 + 1;
                foreach (var item in Model.Items)
                {
                    string cate = Core.Common.CommonMethod.IsNotNullOrEmpty(item.category_parent_name)
                        ? item.category_parent_name + " >> " + item.category_name : item.category_name;
                    <tr>
                        <td>@(n++)</td>
                        <td>@item.code</td>
                        <td>@item.name</td>
                        <td>@cate</td>
                        <td class="align-center">
                            @{
                                if (item.dangerous)
                                {
                                    <a><span class="glyphicon glyphicon-ok"></span></a>
                                }

                            }

                        </td>
                        @if (item.discontinued_datetime.ToString().Length > 0 && item.discontinued_datetime != null)
                        {
                            <td>@DateTime.Parse(item.discontinued_datetime.ToString()).ToString("yyyy-MM-dd")</td>
                        }
                        else
                        {
                            <td></td>
                        }
                        <td>
                            @using (Html.BeginForm("View", "Item", FormMethod.Post))
                            {
                                <a href="#" data-href="@Url.Action("View", "Item", new { id = item.id })" data-toggle="modal" data-target="#more-information" title="More Information">
                                    <span class="glyphicon glyphicon-eye-open"></span>
                                </a>
                            }

                            @using (Html.BeginForm("Update", "Item", FormMethod.Post))
                            {
                                <a href="#" data-href="@Url.Action("Update", "Item", new { id = item.id })" data-toggle="modal"  title="Edit" data-target="#more-information">
                                    <span class="glyphicon glyphicon-pencil"></span>
                                </a>
                            }
                            <a href="#" data-href="@Url.Action("DeleteItem", "Item", new { id = item.id })" data-toggle="modal" data-target="#confirm-delete" title="Delete"><span class="glyphicon glyphicon-trash"></span></a>
                        </td>
                    </tr>
                                    }
                                }
        </tbody>
    </table>
</div>
<div class="row">
    @if (Model != null)
    {
        using (Html.BeginForm("Item", "Item", FormMethod.Get))
        {
            <ul class="pagination">

                @if (Model.page > 1)
                    {
                    <li>
                        <a href="@previous" title="Previous">&laquo;</a>
                    </li>
                }
                @for (int i = min; i <= max; i++)
                    {
                        if (Model.page != i)
                        {
                        <li>
                            <a href="@Url.Action("Item", "Item", new { page = i })" t title="@i">@i</a>
                        </li>
                    }
                    else
                    {
                        <li class="active">
                            <a href="#" title="@i">@i</a>
                        </li>
                    }
                }
                @if (Model.page < pageNum - 1)
                    {
                    <li>
                        <a href="@next" title="Next">&raquo;</a>
                    </li>
                }
            </ul>
        }
    }
</div>

@using (Html.BeginForm("DeleteItem", "Item", FormMethod.Post))
{
    <div class="modal fade" id="confirm-delete" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">

                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title" id="myModalLabel">Confirm Delete</h4>
                </div>

                <div class="modal-body">
                    <p>Do you want to delete this item?</p>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                    <a class="btn btn-danger btn-ok" data-form-method="post">Delete</a>
                </div>
            </div>
        </div>
    </div>
}


<div class="modal fade" id="more-information" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="myModalLabel">View Information</h4>
            </div>
            <div class="modal-body" id="view">

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    $('#confirm-delete').on('show.bs.modal', function (e) {
        $(this).find('.btn-ok').attr('href', $(e.relatedTarget).data('href'));

        $('.debug-url').html('Delete URL: <strong>' + $(this).find('.btn-ok').attr('href') + '</strong>');
    });

    $('#more-information').on('show.bs.modal', function (e) {

        $(this).find('.btn-default').attr('href', $(e.relatedTarget).data('href'));

        $('.debug-url').html('Delete URL: <strong>' + $(this).find('.btn-ok').attr('href') + '</strong>');

        $.get($(e.relatedTarget).data('href'), function (data) {
            $("#view").html(data);
            console.log(data);
        });

    });

    $("a[data-form-method='post']").click(function (event) {
        event.preventDefault();
        var element = $(this);
        var action = element.attr("href");
        element.closest("form").each(function () {
            var form = $(this);
            form.attr("action", action);
            form.submit();
        });
    });

    //$('.row').on("mouseover", function () {
    //    $(this).css("background-color", "red");
    //});
    $("tbody tr").click(function () {
        $(this).addClass('selected').siblings().removeClass("selected");
    });
</script>

