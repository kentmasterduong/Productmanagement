@model  DTO.Item.ItemDTO

@{
    ViewBag.Title = "View";
    Layout = null;
}


<div class="row">
    @if (!string.IsNullOrEmpty((string)TempData["Error"]))
    {
        <div id="error" class="error">
            @TempData["Error"]
        </div>
    }
    @Html.AntiForgeryToken()
    @Html.ValidationSummary()

    <div class="col-md-6">
        <div class="form-group">
            @Html.DisplayNameFor(model => model.code)  :
            <div class="editor-field">
                @Html.TextBoxFor(m => m.code, new { @class = "form-control", @readonly = "true" })
                @Html.ValidationMessageFor(m => m.code)
            </div>
        </div>
        <div class="form-group">
            @Html.DisplayNameFor(model => model.name)  :
            <div class="editor-field">
                @Html.TextBoxFor(m => m.name, new { @class = "form-control", @readonly = "true" })
                @Html.ValidationMessageFor(m => m.name)
            </div>
        </div>
        <div class="form-group">
            @Html.DisplayNameFor(model => model.specification) :
            @Html.TextBoxFor(m => m.specification, new { @class = "form-control", @readonly = "true" })

        </div>

        <div class="form-group">
            @Html.DisplayNameFor(model => model.manufacture_size) :
            @Html.TextBoxFor(m => m.manufacture_size, new { @class = "form-control", @readonly = "true" })
        </div>
        <div class="form-group">
            @Html.DisplayNameFor(model => model.category_id) :
            @Html.DropDownListFor(m => m.category_id, (SelectList)ViewBag.ListCategory, "Please select", new { @class = "form-control", @readonly = "true" })
        </div>
        <div class="form-group">
            @Html.DisplayNameFor(model => model.discontinued_datetime) :

            @Html.EditorFor(model => model.discontinued_datetime, new { placeholder = "Enter Drop-off date here...", htmlAttributes = new { @class = "form-control date-picker", @readonly = "true" } })
        </div>
        <div class="form-group">
            @Html.DisplayNameFor(model => model.inventory_measure_id) :
            @Html.DropDownListFor(m => m.inventory_measure_id, (SelectList)ViewBag.listMeasure, "Please select", new { @class = "form-control", @readonly = "true" })
        </div>
        <div class="form-group">
            @Html.DisplayNameFor(model => model.inventory_expired) :
            @Html.TextBoxFor(m => m.inventory_expired, new { @class = "form-control", @readonly = "true" })
        </div>
        <div class="form-group">
            @Html.DisplayNameFor(model => model.description) :
            @Html.TextAreaFor(m => m.description, new { @class = "form-control", @readonly = "true" })
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                @Html.DisplayNameFor(model => model.inventory_standard_cost) :
                @Html.TextBoxFor(m => m.inventory_standard_cost, new { @class = "form-control", @readonly = "true" })
            </div>
            <div class="form-group">
                @Html.DisplayNameFor(model => model.inventory_list_price) :
                @Html.TextBoxFor(m => m.inventory_list_price, new { @class = "form-control", @readonly = "true" })
            </div>
            <div class="form-group">
                @Html.DisplayNameFor(model => model.manufacture_day)
                @Html.TextBoxFor(m => m.manufacture_day, new { @class = "form-control", @readonly = "true" })
            </div>
            <div class="form-group">
                @Html.DisplayNameFor(model => model.manufacture_size_measure_id) :
                @Html.DropDownListFor(m => m.manufacture_size_measure_id, (SelectList)ViewBag.listMeasure, "Please select", new { @class = "form-control", @readonly = "true" })
            </div>
            <div class="form-group">
                @Html.DisplayNameFor(model => model.manufacture_weight) :
                @Html.TextBoxFor(m => m.manufacture_weight, new { @class = "form-control", @readonly = "true" })
            </div>
            <div class="form-group">
                @Html.DisplayNameFor(model => model.manufacture_weight_measure_id) :
                @Html.DropDownListFor(m => m.manufacture_weight_measure_id, (SelectList)ViewBag.listMeasure, "Please select", new { @class = "form-control", @readonly = "true" })
            </div>
            <div class="form-group">
                @Html.DisplayNameFor(model => model.manufacture_style) :
                @Html.TextBoxFor(m => m.manufacture_style, new { @class = "form-control", @readonly = "true" })
            </div>
            <div class="form-group">
                @Html.DisplayNameFor(model => model.manufacture_class) :
                @Html.TextBoxFor(m => m.manufacture_class, new { @class = "form-control", @readonly = "true" })
            </div>
            <div class="form-group">
                @Html.DisplayNameFor(model => model.manufacture_color) :
                @Html.TextBoxFor(m => m.manufacture_color, new { @class = "form-control", @readonly = "true" })
            </div>
        </div>
    </div>
    <div class="row" onclick="return false;">
        <div class="col-md-5">
            <div class="row">Manufacture Make</div>
            <label class="switch">
                @Html.CheckBoxFor(m => m.manufacture_make )
                <div class="slider round"></div>
            </label>

            <div class="row">Manufacture Tool</div>
            <label class="switch">
                @Html.CheckBoxFor(m => m.manufacture_tool)
                <div class="slider round"></div>
            </label>
        </div>
        <div class="col-md-5">
            <div class="row">Manufacture Finished Goods</div>
            <label class="switch">
                @Html.CheckBoxFor(m => m.manufacture_finished_goods)
                <div class="slider round"></div>
            </label>

            <div class="row">Dangerous</div>
            <label class="switch">
                @Html.CheckBoxFor(m => m.dangerous)
                <div class="slider round"></div>
            </label>
        </div>
    </div>
</div>

